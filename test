// Find smallest window

#include<stdio.h>
#include<string.h>
#include<stdlib.h>

#define FORI( N)    for( i = 0; i < (N); i++)
#define FORA( N, A) for( i = A; i < N; i++)
#define FORS( str)  for( i = 0; *(str + i); i++)
#define FORSN( str, N)  for( i = 0; (*(str + i) && (i < N)); i++)

#define SI( N)      fscanf(fp, "%d", &N)
#define SS( str, N)     bzero( str, N); \
                    fscanf(fp, "%s", str);
#define PI( N)      printf("%d\n", N)
#define PN( N)      printf("\n")
#define PS( N)      printf("%s\n", N)
#define ISEQ(A, B)  (A == B)

int check( char *list, char *str)
{
    int i, tmp = 0;
    FORS( list){
        if( list[i] != str[i])
            if( list[i] != '*'){
                if( !tmp )
                    tmp = 1;
                else
                    return 0;
            }
    }
    return 1;
}

int main()
{
    int N, i = 0, j = 1, max = 0, n, tmp;//, check[3001][3001] = {0};
    char  check[3001][3001] = {0}, list[3001] = {0}, str[3001] = {0};

    FILE *fp = fopen("input.txt", "r");

    if(fp == NULL){
        printf("error\n");
        return 0;
    }

    SS( list, 3001);
    SI( N);
    n = N;

    printf("list: %s\nN: %d\n", list, N);
    while(N--){
        SS( str, 3001);
        printf("str: %s\n", str);
        tmp = 0;
        for( j = 0; str[j]; j++){
            if( list[j] != str[j])
                if( list[j] != '*'){
                    if( !tmp){    
                        check[i][j + 1] =  1;
                        tmp = 1;
                    }
                    else
                        break;        
                }
        }
        i++;
    }

    for( i = 0; i < n; i++, PN( 7))
        for( j = 1; j < 4; j++)
            printf( "%d, ", check[i][j]);
        PN(6);

    for( j = 1; j < 3001; j++){
        tmp =0;
        for( i = 0; i < n; i++)
            if( check [i][j] == 1)
                tmp++;
        if( max < tmp)
            max = tmp;
    }
    PI(max);
    return 0;
}
